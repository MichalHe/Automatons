import pytest
from relations_structures import Relation
from automatons import MTBDD_NFA, LSBF_Alphabet, NFA
from pressburger_algorithms import build_nfa_from_inequality


def test_try_encode_sharp_inequality_into_mtbdd_nfa():
    ineq = Relation(['x', 'y', 'z'], [1, 1, 1], -1, '<=')
    alphabet = LSBF_Alphabet.from_variable_names([1, 2, 3])

    mtbdd_nfa = build_nfa_from_inequality(ineq, alphabet, MTBDD_NFA)
    nfa = build_nfa_from_inequality(ineq, alphabet, NFA)

    nfa_transitions = set(nfa.transition_fn.iter())
    mtbdd_transitions = set(mtbdd_nfa.transition_fn.iter())

    assert len(nfa_transitions) == len(mtbdd_transitions), \
        'The transition functions should have the same number of transitions'

    for t in nfa_transitions:
        assert t in mtbdd_transitions, \
            f'Found a transition that is in the transitions generated by mtbdd: {t}'
